{"version":3,"file":"login.js","sources":["login.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    $('[data-init=\"toast\"]').toast('show');\r\n\r\n    const userId = Cookies.get(\"user_id\");\r\n    const domain = Cookies.get(\"domain\");\r\n    const path = Cookies.get(\"path\");\r\n    const currentDomain = window.location.hostname;\r\n    const currentPath = window.location.pathname.split(\"/\").slice(0, -1).join(\"/\");\r\n\r\n    // Check for 2FA token in localStorage - if it exists, we should be on the 2FA verification page\r\n    const twofa_token = localStorage.getItem(\"twofa_token\");\r\n\r\n    // If on 2FA page with token, setup 2FA verification form handler\r\n    if (twofa_token && window.location.pathname.includes(\"twofa_verify.php\")) {\r\n        setupTwoFAVerification(twofa_token);\r\n        return; // Exit early, don't process the login form\r\n    }\r\n\r\n    // Handle auto redirect to dashboard if already logged in\r\n    if (userId && domain === currentDomain && path === currentPath) {\r\n        window.location.href = \"dashboard.php\";\r\n    } else {\r\n        Cookies.remove(\"user_id\");\r\n        Cookies.remove(\"username\");\r\n        Cookies.remove(\"name\");\r\n        Cookies.remove(\"avatar\");\r\n        Cookies.remove(\"domain\");\r\n        Cookies.remove(\"path\");\r\n        Cookies.remove(\"user_type\");\r\n\r\n        // Also clear any 2FA tokens when clearing cookies\r\n        localStorage.removeItem(\"twofa_token\");\r\n    }\r\n\r\n    // Handle login form submission\r\n    const loginForm = document.forms.login_form;\r\n    if (!loginForm) return;\r\n\r\n    const redirectUrl = new URLSearchParams(window.location.search).get(\"redirect\") || \"dashboard.php\";\r\n\r\n    loginForm.addEventListener(\"submit\", function (event) {\r\n        event.preventDefault();\r\n\r\n        const csrfToken = loginForm.querySelector('input[name=\"csrf_token\"]')?.value;\r\n        const username = loginForm.username.value;\r\n        const password = loginForm.password.value;\r\n        const formData = new FormData();\r\n\r\n        if (!csrfToken) {\r\n            showError(\"CSRF token missing. Please refresh the page.\");\r\n            return;\r\n        }\r\n\r\n        formData.append(\"csrf_token\", csrfToken);\r\n        formData.append(\"username\", username);\r\n        formData.append(\"password\", password);\r\n        formData.append(\"redirect\", redirectUrl);\r\n\r\n        const recaptchaElement = document.querySelector(\".g-recaptcha\");\r\n        if (recaptchaElement) {\r\n            const recaptchaResponse = grecaptcha.getResponse();\r\n            if (!recaptchaResponse) {\r\n                showError(\"Please complete the reCAPTCHA.\");\r\n                return;\r\n            }\r\n            formData.append(\"g-recaptcha-response\", recaptchaResponse);\r\n        }\r\n\r\n        // Show loading state\r\n        const submitButton = loginForm.querySelector('button[type=\"submit\"]');\r\n        const originalButtonText = submitButton.innerHTML;\r\n        submitButton.disabled = true;\r\n        submitButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Signing in...';\r\n\r\n        fetch(\"./includes/login.php\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                // console.log(\"Login response:\", data); // For debugging\r\n\r\n                // Reset button state\r\n                submitButton.disabled = false;\r\n                submitButton.innerHTML = originalButtonText;\r\n\r\n                if (data.success) {\r\n                    // Regular login success\r\n                    const expirationDate = new Date();\r\n                    expirationDate.setTime(expirationDate.getTime() + (3 * 60 * 60 * 1000));\r\n                    const newPath = window.location.pathname.split(\"/\").slice(0, -1).join(\"/\");\r\n\r\n                    Cookies.set(\"user_id\", data.user_id, { expires: expirationDate, path: \"/\" });\r\n                    Cookies.set(\"username\", data.username, { expires: expirationDate, path: \"/\" });\r\n                    Cookies.set(\"name\", data.name, { expires: expirationDate, path: \"/\" });\r\n                    Cookies.set(\"avatar\", data.avatar, { expires: expirationDate, path: \"/\" });\r\n                    Cookies.set(\"domain\", currentDomain, { expires: expirationDate, path: \"/\" });\r\n                    Cookies.set(\"path\", newPath, { expires: expirationDate, path: \"/\" });\r\n                    Cookies.set(\"user_type\", data.user_type, { expires: expirationDate, path: \"/\" });\r\n\r\n                    window.location.href = redirectUrl;\r\n                } else if (data.requires_2fa) {\r\n                    // Got 2FA request with token\r\n                    if (data.twofa_token) {\r\n                        // Save token in localStorage for the verification page to use\r\n                        localStorage.setItem(\"twofa_token\", data.twofa_token);\r\n\r\n                        // Redirect to 2FA verification page\r\n                        window.location.href = \"twofa_verify.php\";\r\n                    } else {\r\n                        showError(\"Missing 2FA verification token\");\r\n                    }\r\n                } else {\r\n                    // Login error\r\n                    showError(data.message || \"An error occurred during login\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error:\", error);\r\n                // Reset button state\r\n                submitButton.disabled = false;\r\n                submitButton.innerHTML = originalButtonText;\r\n                showError(\"An error occurred during login. Please try again.\");\r\n            });\r\n    });\r\n\r\n    const recaptchaElement = document.querySelector(\".g-recaptcha\");\r\n    if (recaptchaElement) {\r\n        recaptchaElement.setAttribute(\"data-theme\", \"dark\");\r\n    }\r\n\r\n    // Helper function to show error message\r\n    function showError(message) {\r\n        const errorMessageElement = document.getElementById(\"error-message\");\r\n        if (errorMessageElement) {\r\n            errorMessageElement.textContent = message;\r\n            errorMessageElement.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    // Helper function to setup 2FA form\r\n    function setupTwoFAVerification(token) {\r\n        const twofaForm = document.getElementById(\"twofa-form\");\r\n        if (!twofaForm) return;\r\n\r\n        const errorMessage = document.getElementById(\"error-message\");\r\n\r\n        twofaForm.addEventListener(\"submit\", function (e) {\r\n            e.preventDefault();\r\n\r\n            const code = document.getElementById(\"twofa_code\").value.trim();\r\n\r\n            if (!/^\\d{6}$/.test(code)) {\r\n                if (errorMessage) {\r\n                    errorMessage.textContent = \"Please enter a valid 6-digit code\";\r\n                    errorMessage.style.display = \"block\";\r\n                }\r\n                return;\r\n            }\r\n\r\n            const formData = new FormData();\r\n\r\n            // No need for CSRF token in 2FA verification, using the token instead\r\n            formData.append(\"twofa_code\", code);\r\n            formData.append(\"twofa_token\", token);\r\n\r\n            // Show loading state\r\n            const submitButton = twofaForm.querySelector('button[type=\"submit\"]');\r\n            const originalButtonText = submitButton.innerHTML;\r\n            submitButton.disabled = true;\r\n            submitButton.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Verifying...';\r\n\r\n            // Send AJAX request to verify 2FA code\r\n            fetch('./includes/login.php', {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Network response was not ok');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    // Reset button state\r\n                    submitButton.disabled = false;\r\n                    submitButton.innerHTML = originalButtonText;\r\n\r\n                    if (data.success) {\r\n                        // Set cookies and redirect\r\n                        const expirationDate = new Date();\r\n                        expirationDate.setTime(expirationDate.getTime() + (3 * 60 * 60 * 1000));\r\n                        const currentDomain = window.location.hostname;\r\n                        const newPath = window.location.pathname.split(\"/\").slice(0, -1).join(\"/\");\r\n\r\n                        Cookies.set(\"user_id\", data.user_id, { expires: expirationDate, path: \"/\" });\r\n                        Cookies.set(\"username\", data.username, { expires: expirationDate, path: \"/\" });\r\n                        Cookies.set(\"name\", data.name, { expires: expirationDate, path: \"/\" });\r\n                        Cookies.set(\"avatar\", data.avatar, { expires: expirationDate, path: \"/\" });\r\n                        Cookies.set(\"domain\", data.domain, { expires: expirationDate, path: \"/\" });\r\n                        Cookies.set(\"path\", newPath, { expires: expirationDate, path: \"/\" });\r\n                        Cookies.set(\"user_type\", data.user_type, { expires: expirationDate, path: \"/\" });\r\n\r\n                        // Clear 2FA token\r\n                        localStorage.removeItem(\"twofa_token\");\r\n\r\n                        // Redirect based on user type\r\n                        if (data.user_type === 'owner') {\r\n                            window.location.href = 'admin.php';\r\n                        } else {\r\n                            window.location.href = 'dashboard.php';\r\n                        }\r\n                    } else {\r\n                        // Show error message\r\n                        if (errorMessage) {\r\n                            errorMessage.textContent = data.message || 'Invalid verification code';\r\n                            errorMessage.style.display = 'block';\r\n                        }\r\n\r\n                        // Clear the input field\r\n                        document.getElementById('twofa_code').value = '';\r\n                        document.getElementById('twofa_code').focus();\r\n\r\n                        // If the token is invalid or expired, redirect back to login\r\n                        if (!data.requires_2fa) {\r\n                            localStorage.removeItem(\"twofa_token\");\r\n                            setTimeout(() => {\r\n                                window.location.href = 'index.php?error=' + encodeURIComponent(data.message || 'Authentication failed');\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                    // Reset button state\r\n                    submitButton.disabled = false;\r\n                    submitButton.innerHTML = originalButtonText;\r\n\r\n                    if (errorMessage) {\r\n                        errorMessage.textContent = 'An error occurred. Please try again.';\r\n                        errorMessage.style.display = 'block';\r\n                    }\r\n                });\r\n        });\r\n    }\r\n});"],"names":["document","addEventListener","$","toast","userId","Cookies","get","domain","path","currentDomain","window","location","hostname","currentPath","pathname","split","slice","join","twofa_token","localStorage","getItem","includes","setupTwoFAVerification","token","twofaForm","getElementById","errorMessage","e","preventDefault","code","value","trim","test","formData","FormData","append","submitButton","querySelector","originalButtonText","innerHTML","disabled","fetch","method","body","then","response","ok","json","Error","data","expirationDate","newPath","success","Date","setTime","getTime","set","user_id","expires","username","name","avatar","user_type","removeItem","href","textContent","message","style","display","focus","requires_2fa","setTimeout","encodeURIComponent","catch","error","console","remove","loginForm","forms","login_form","redirectUrl","URLSearchParams","search","event","csrfToken","password","recaptchaResponse","grecaptcha","getResponse","showError","setItem","recaptchaElement","errorMessageElement","setAttribute"],"mappings":"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"}