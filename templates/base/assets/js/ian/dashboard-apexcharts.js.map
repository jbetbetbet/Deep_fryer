{"version":3,"file":"dashboard-apexcharts.js","sources":["dashboard-apexcharts.js"],"sourcesContent":["/**\r\n * Dashboard ApexCharts Implementation\r\n * Handles pie chart rendering for API traffic statistics\r\n */\r\n\r\nvar renderPieChart = function (data) {\r\n    const chartContainer = document.getElementById('apexPieChart');\r\n\r\n    if (!chartContainer) {\r\n        console.warn('Pie chart container not found');\r\n        return;\r\n    }\r\n\r\n    // Handle data format - convert if needed\r\n    let chartData = data;\r\n\r\n    // If data is in the format [{label: 'X', data: Y}], use it directly\r\n    // If data is in separate arrays format, convert it\r\n    if (!Array.isArray(data) || !data[0] || typeof data[0].label === 'undefined') {\r\n        // Check for data in multiple possible locations\r\n        let labels = [];\r\n        let values = [];\r\n\r\n        // Try to get data from different possible sources\r\n        if (typeof window.dashboardData !== 'undefined' && window.dashboardData.pieChartLabels) {\r\n            labels = window.dashboardData.pieChartLabels;\r\n            values = window.dashboardData.pieChartValues;\r\n        } else if (typeof pieChartLabels !== 'undefined' && typeof pieChartValues !== 'undefined') {\r\n            labels = pieChartLabels;\r\n            values = pieChartValues;\r\n        } else if (typeof window.pieChartLabels !== 'undefined' && typeof window.pieChartValues !== 'undefined') {\r\n            labels = window.pieChartLabels;\r\n            values = window.pieChartValues;\r\n        } else {\r\n            // Fallback data if no data is available\r\n            labels = ['No Data'];\r\n            values = [100];\r\n            console.warn('No chart data found, using fallback data');\r\n        }\r\n\r\n        // Convert to expected format\r\n        chartData = labels.map((label, index) => ({\r\n            label: label,\r\n            data: values[index] || 0\r\n        }));\r\n    }\r\n\r\n    // Validate data exists and is properly formatted\r\n    if (!Array.isArray(chartData) || chartData.length === 0) {\r\n        console.error('Invalid pie chart data structure');\r\n        chartContainer.innerHTML = '<div class=\"d-flex align-items-center justify-content-center h-100\"><span class=\"text-muted\">Invalid data format</span></div>';\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Clear any existing content\r\n        chartContainer.innerHTML = '';\r\n\r\n        var options = {\r\n            chart: {\r\n                height: 275,\r\n                type: 'pie',\r\n            },\r\n            dataLabels: {\r\n                dropShadow: {\r\n                    enabled: false,\r\n                    top: 1,\r\n                    left: 1,\r\n                    blur: 1,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            stroke: {\r\n                show: false\r\n            },\r\n            theme: {\r\n                monochrome: {\r\n                    enabled: true,\r\n                    color: app.color.theme,\r\n                    shadeTo: 'dark',\r\n                    shadeIntensity: 0.65\r\n                }\r\n            },\r\n            labels: chartData.map(data => data.label),\r\n            legend: {\r\n                labels: {\r\n                    colors: app.color.white,\r\n                    text: 'currentColor'\r\n                }\r\n            },\r\n            series: chartData.map(data => data.data),\r\n        };\r\n\r\n        var chart = new ApexCharts(chartContainer, options);\r\n        chart.render().then(() => {\r\n            console.log('Pie chart rendered successfully with', chartData.length, 'data points');\r\n        }).catch((error) => {\r\n            console.error('Error rendering pie chart:', error);\r\n            chartContainer.innerHTML = '<div class=\"d-flex align-items-center justify-content-center h-100\"><span class=\"text-danger\">Error loading chart</span></div>';\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Error creating pie chart:', error);\r\n        chartContainer.innerHTML = '<div class=\"d-flex align-items-center justify-content-center h-100\"><span class=\"text-danger\">Chart initialization failed</span></div>';\r\n    }\r\n};\r\n\r\nvar handleRenderChart = function () {\r\n    // Add retry counter to prevent infinite loops\r\n    if (!handleRenderChart.retryCount) {\r\n        handleRenderChart.retryCount = 0;\r\n    }\r\n\r\n    // Maximum retry attempts\r\n    const maxRetries = 50;\r\n\r\n    if (handleRenderChart.retryCount >= maxRetries) {\r\n        console.error('Chart data loading timed out after', maxRetries, 'attempts');\r\n        // Render with fallback data instead of continuing to retry\r\n        renderPieChart([{ label: 'No Data', data: 100 }]);\r\n        return;\r\n    }\r\n\r\n    // Check for data availability\r\n    const hasData = (typeof window.dashboardData !== 'undefined' && window.dashboardData.pieChartLabels) ||\r\n        (typeof pieChartLabels !== 'undefined' && typeof pieChartValues !== 'undefined') ||\r\n        (typeof window.pieChartLabels !== 'undefined' && typeof window.pieChartValues !== 'undefined') ||\r\n        (typeof pieChartData !== 'undefined');\r\n\r\n    if (!hasData) {\r\n        handleRenderChart.retryCount++;\r\n        console.warn('Chart data not available, retrying... (attempt', handleRenderChart.retryCount, 'of', maxRetries, ')');\r\n        setTimeout(handleRenderChart, 100);\r\n        return;\r\n    }\r\n\r\n    // Data is available, render the chart\r\n    // Check if pieChartData exists in the expected format\r\n    if (typeof pieChartData !== 'undefined') {\r\n        renderPieChart(pieChartData);\r\n    } else {\r\n        renderPieChart(null); // Will use fallback data detection\r\n    }\r\n};\r\n\r\n$(document).ready(function () {\r\n    // Reset retry counter\r\n    handleRenderChart.retryCount = 0;\r\n\r\n    handleRenderChart();\r\n\r\n    document.addEventListener('theme-reload', function () {\r\n        $('#apexPieChart').empty();\r\n        handleRenderChart();\r\n    });\r\n});\r\n\r\n// Fallback for cases where jQuery is not available or DOM is already loaded\r\nif (typeof $ === 'undefined') {\r\n    // Initialize when DOM is ready\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        // Reset retry counter\r\n        handleRenderChart.retryCount = 0;\r\n\r\n        // Small delay to ensure all data is loaded\r\n        setTimeout(handleRenderChart, 50);\r\n\r\n        // Theme reload event listener\r\n        document.addEventListener('theme-reload', function () {\r\n            const chartContainer = document.getElementById('apexPieChart');\r\n            if (chartContainer) {\r\n                chartContainer.innerHTML = '';\r\n            }\r\n            handleRenderChart();\r\n        });\r\n    });\r\n\r\n    // Fallback for cases where DOMContentLoaded has already fired\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', function () {\r\n            handleRenderChart.retryCount = 0;\r\n            handleRenderChart();\r\n        });\r\n    } else {\r\n        handleRenderChart.retryCount = 0;\r\n        handleRenderChart();\r\n    }\r\n}\r\n"],"names":["renderPieChart","data","chartContainer","document","getElementById","let","chartData","Array","isArray","label","labels","values","window","dashboardData","pieChartLabels","pieChartValues","console","warn","map","index","length","options","chart","height","type","dataLabels","dropShadow","enabled","top","left","blur","opacity","stroke","show","theme","monochrome","innerHTML","color","app","shadeTo","shadeIntensity","legend","colors","white","text","series","ApexCharts","render","then","log","catch","error","handleRenderChart","retryCount","pieChartData","setTimeout","$","ready","addEventListener","empty","readyState"],"mappings":"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"}